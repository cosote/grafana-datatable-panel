{"version":3,"sources":["../src/transformers.js"],"names":["extractColumns","data","_","flatten","map","group","columns","extractRows","customColumns","actualColumns","rows","offset","targetRow","length","forEach","column","columnIndex","find","text","dataIndex","row","rowIndex","cellIndex","model","modelIndex","cell","transformDataToTable","panel","TableModel","transformer","transformers","transform","Error","moment","TimeSeries","timeseries_to_rows","description","getColumns","type","i","series","y","datapoints","dp","push","target","timeseries_to_columns","points","timeKey","toString","time","point","values","value","timeseries_aggregations","alias","getFlotPairs","cells","stats","annotations","evt","min","title","tags","table","undefined","json","names","maxDocs","Math","doc","flattened","propName","key","z","isObject","JSON","stringify"],"mappings":"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","file":"transformers.js","sourcesContent":["\nimport _ from 'lodash';\nimport moment from 'moment';\nimport flatten from 'app/core/utils/flatten';\nimport TimeSeries from 'app/core/time_series2';\nimport TableModel from 'app/core/table_model';\n\nvar transformers = {};\n\ntransformers.timeseries_to_rows = {\n  description: 'Time series to rows',\n  getColumns: function() {\n    return [];\n  },\n  transform: function(data, panel, model) {\n    model.columns = [\n      {text: 'Time', type: 'date'},\n      {text: 'Metric'},\n      {text: 'Value'},\n    ];\n\n    for (var i = 0; i < data.length; i++) {\n      var series = data[i];\n      for (var y = 0; y < series.datapoints.length; y++) {\n        var dp = series.datapoints[y];\n        model.rows.push([dp[1], series.target, dp[0]]);\n      }\n    }\n  },\n};\n\ntransformers.timeseries_to_columns = {\n  description: 'Time series to columns',\n  getColumns: function() {\n    return [];\n  },\n  transform: function(data, panel, model) {\n    model.columns.push({text: 'Time', type: 'date'});\n\n    // group by time\n    var points = {};\n\n    for (var i = 0; i < data.length; i++) {\n      var series = data[i];\n      model.columns.push({text: series.target});\n\n      for (var y = 0; y < series.datapoints.length; y++) {\n        var dp = series.datapoints[y];\n        var timeKey = dp[1].toString();\n\n        if (!points[timeKey]) {\n          points[timeKey] = {time: dp[1]};\n          points[timeKey][i] = dp[0];\n        } else {\n          points[timeKey][i] = dp[0];\n        }\n      }\n    }\n\n    for (var time in points) {\n      var point = points[time];\n      var values = [point.time];\n\n      for (let i = 0; i < data.length; i++) {\n        var value = point[i];\n        values.push(value);\n      }\n\n      model.rows.push(values);\n    }\n  }\n};\n\ntransformers.timeseries_aggregations = {\n  description: 'Time series aggregations',\n  getColumns: function() {\n    return [\n      {text: 'Avg', value: 'avg'},\n      {text: 'Min', value: 'min'},\n      {text: 'Max', value: 'max'},\n      {text: 'Total', value: 'total'},\n      {text: 'Current', value: 'current'},\n      {text: 'Count', value: 'count'},\n    ];\n  },\n  transform: function(data, panel, model) {\n    var i, y;\n    model.columns.push({text: 'Metric'});\n\n    if (panel.columns.length === 0) {\n      panel.columns.push({text: 'Avg', value: 'avg'});\n    }\n\n    for (i = 0; i < panel.columns.length; i++) {\n      model.columns.push({text: panel.columns[i].text});\n    }\n\n    for (i = 0; i < data.length; i++) {\n      var series = new TimeSeries({\n        datapoints: data[i].datapoints,\n        alias: data[i].target,\n      });\n\n      series.getFlotPairs('connected');\n      var cells = [series.alias];\n\n      for (y = 0; y < panel.columns.length; y++) {\n        cells.push(series.stats[panel.columns[y].value]);\n      }\n\n      model.rows.push(cells);\n    }\n  }\n};\n\ntransformers.annotations = {\n  description: 'Annotations',\n  getColumns: function() {\n    return [];\n  },\n  transform: function(data, panel, model) {\n    model.columns.push({text: 'Time', type: 'date'});\n    model.columns.push({text: 'Title'});\n    model.columns.push({text: 'Text'});\n    model.columns.push({text: 'Tags'});\n\n    if (!data || data.length === 0) {\n      return;\n    }\n\n    for (var i = 0; i < data.length; i++) {\n      var evt = data[i];\n      model.rows.push([evt.min, evt.title, evt.text, evt.tags]);\n    }\n  }\n};\n\ntransformers.table = {\n  description: 'Table',\n  getColumns: function(data) {\n    if (!data || data.length === 0) {\n      return [];\n    }\n    if (data.length === 1) {\n      return data[0].columns;\n    } else {\n      return extractColumns(data);\n    }\n  },\n  transform: function(data, panel, model) {\n    if (!data || data.length === 0) {\n      return;\n    }\n\n    if (data[0] === undefined || data[0].type === undefined || data[0].type !== 'table') {\n      throw new Error('Query result is not in table format, try using another transform.');\n    }\n    model.columns = extractColumns(data);\n    model.rows = extractRows(data, panel.columns, model.columns);\n  }\n};\n\ntransformers.json = {\n  description: 'JSON Data',\n  getColumns: function(data) {\n    if (!data || data.length === 0) {\n      return [];\n    }\n\n    var names = {};\n    for (var i = 0; i < data.length; i++) {\n      var series = data[i];\n      if (series.type !== 'docs') {\n        continue;\n      }\n\n      // only look at 100 docs\n      var maxDocs = Math.min(series.datapoints.length, 100);\n      for (var y = 0; y < maxDocs; y++) {\n        var doc = series.datapoints[y];\n        var flattened = flatten(doc, null);\n        for (var propName in flattened) {\n          names[propName] = true;\n        }\n      }\n    }\n\n    return _.map(names, function(value, key) {\n      return {text: key, value: key};\n    });\n  },\n  transform: function(data, panel, model) {\n    var i, y, z;\n    for (i = 0; i < panel.columns.length; i++) {\n      model.columns.push({text: panel.columns[i].text});\n    }\n\n    if (model.columns.length === 0) {\n      model.columns.push({text: 'JSON'});\n    }\n\n    for (i = 0; i < data.length; i++) {\n      var series = data[i];\n\n      for (y = 0; y < series.datapoints.length; y++) {\n        var dp = series.datapoints[y];\n        var values = [];\n\n        if (_.isObject(dp) && panel.columns.length > 0) {\n          var flattened = flatten(dp, null);\n          for (z = 0; z < panel.columns.length; z++) {\n            values.push(flattened[panel.columns[z].value]);\n          }\n        } else {\n          values.push(JSON.stringify(dp));\n        }\n\n        model.rows.push(values);\n      }\n    }\n  }\n};\n\nfunction extractColumns(data) {\n  return _.flatten(data.map((group)=> group.columns));\n}\n\nfunction extractRows(data, customColumns, actualColumns) {\n  var rows = [], offset = 0, targetRow;\n  \n  if (customColumns.length) {\n    _.forEach(customColumns, (column, columnIndex)=> {\n      column = _.find(actualColumns, {text:column.text});\n      _.forEach(data[column.dataIndex].rows, (row, rowIndex)=> {\n        var targetRow = rows[rowIndex];\n        if (!targetRow) {\n          targetRow = rows[rowIndex] = [];\n        }\n        targetRow[columnIndex] = row[column.cellIndex];\n      });\n    });\n  } else {\n    _.forEach(data, (model, modelIndex)=> {\n      if (modelIndex) {\n        offset += (data[modelIndex-1].rows[0] || []).length;\n      }\n      _.forEach(model.rows, (row, rowIndex)=> {\n        var targetRow = rows[rowIndex];\n        if (!targetRow) {\n          targetRow = rows[rowIndex] = [];\n        }\n        _.forEach(row, (cell, cellIndex)=> {\n          targetRow[cellIndex+offset] = cell;\n        });\n      });\n    });\n  }\n  \n  return rows;\n}\n\nfunction transformDataToTable(data, panel) {\n  var model = new TableModel();\n\n  if (!data || data.length === 0) {\n    return model;\n  }\n\n  var transformer = transformers[panel.transform];\n  if (!transformer) {\n    throw new Error('Transformer ' + panel.transformer + ' not found');\n  }\n\n  transformer.transform(data, panel, model);\n  return model;\n}\n\nexport {transformers, transformDataToTable};\n"]}
{"version":3,"sources":["../src/transformers.js"],"names":["extractColumns","data","_","flatten","map","group","columns","extractRows","panel","model","rows","mapping","length","customColumns","filter","column","script","allHaveGrouping","every","dataset","grouping","nameRowCells","forEach","namedRows","row","rowIndex","assign","values","outputRow","excludeUngrouped","Object","keys","value","text","evalRowScript","push","dataIndex","slice","output","create","cell","cellIndex","find","replace","placeholderRegex","e","name","evalScript","transformDataToTable","TableModel","transformer","transformers","transform","Error","moment","memoize","TimeSeries","timeseries_to_rows","description","getColumns","type","i","series","y","datapoints","dp","target","timeseries_to_columns","points","timeKey","toString","time","point","timeseries_aggregations","alias","getFlotPairs","cells","stats","annotations","evt","min","title","tags","table","undefined","index","groupings","concat","json","names","maxDocs","Math","doc","flattened","propName","key","z","isObject","JSON","stringify","gEval","eval"],"mappings":"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","file":"transformers.js","sourcesContent":["\nimport _ from 'lodash';\nimport moment from 'moment';\nimport memoize from './libs/fast-memoize/src/index.js';\nimport flatten from 'app/core/utils/flatten';\nimport TimeSeries from 'app/core/time_series2';\nimport TableModel from 'app/core/table_model';\n\nvar transformers = {};\n\ntransformers.timeseries_to_rows = {\n  description: 'Time series to rows',\n  getColumns: function() {\n    return [];\n  },\n  transform: function(data, panel, model) {\n    model.columns = [\n      {text: 'Time', type: 'date'},\n      {text: 'Metric'},\n      {text: 'Value'},\n    ];\n\n    for (var i = 0; i < data.length; i++) {\n      var series = data[i];\n      for (var y = 0; y < series.datapoints.length; y++) {\n        var dp = series.datapoints[y];\n        model.rows.push([dp[1], series.target, dp[0]]);\n      }\n    }\n  },\n};\n\ntransformers.timeseries_to_columns = {\n  description: 'Time series to columns',\n  getColumns: function() {\n    return [];\n  },\n  transform: function(data, panel, model) {\n    model.columns.push({text: 'Time', type: 'date'});\n\n    // group by time\n    var points = {};\n\n    for (var i = 0; i < data.length; i++) {\n      var series = data[i];\n      model.columns.push({text: series.target});\n\n      for (var y = 0; y < series.datapoints.length; y++) {\n        var dp = series.datapoints[y];\n        var timeKey = dp[1].toString();\n\n        if (!points[timeKey]) {\n          points[timeKey] = {time: dp[1]};\n          points[timeKey][i] = dp[0];\n        } else {\n          points[timeKey][i] = dp[0];\n        }\n      }\n    }\n\n    for (var time in points) {\n      var point = points[time];\n      var values = [point.time];\n\n      for (let i = 0; i < data.length; i++) {\n        var value = point[i];\n        values.push(value);\n      }\n\n      model.rows.push(values);\n    }\n  }\n};\n\ntransformers.timeseries_aggregations = {\n  description: 'Time series aggregations',\n  getColumns: function() {\n    return [\n      {text: 'Avg', value: 'avg'},\n      {text: 'Min', value: 'min'},\n      {text: 'Max', value: 'max'},\n      {text: 'Total', value: 'total'},\n      {text: 'Current', value: 'current'},\n      {text: 'Count', value: 'count'},\n    ];\n  },\n  transform: function(data, panel, model) {\n    var i, y;\n    model.columns.push({text: 'Metric'});\n\n    if (panel.columns.length === 0) {\n      panel.columns.push({text: 'Avg', value: 'avg'});\n    }\n\n    for (i = 0; i < panel.columns.length; i++) {\n      model.columns.push({text: panel.columns[i].text});\n    }\n\n    for (i = 0; i < data.length; i++) {\n      var series = new TimeSeries({\n        datapoints: data[i].datapoints,\n        alias: data[i].target,\n      });\n\n      series.getFlotPairs('connected');\n      var cells = [series.alias];\n\n      for (y = 0; y < panel.columns.length; y++) {\n        cells.push(series.stats[panel.columns[y].value]);\n      }\n\n      model.rows.push(cells);\n    }\n  }\n};\n\ntransformers.annotations = {\n  description: 'Annotations',\n  getColumns: function() {\n    return [];\n  },\n  transform: function(data, panel, model) {\n    model.columns.push({text: 'Time', type: 'date'});\n    model.columns.push({text: 'Title'});\n    model.columns.push({text: 'Text'});\n    model.columns.push({text: 'Tags'});\n\n    if (!data || data.length === 0) {\n      return;\n    }\n\n    for (var i = 0; i < data.length; i++) {\n      var evt = data[i];\n      model.rows.push([evt.min, evt.title, evt.text, evt.tags]);\n    }\n  }\n};\n\ntransformers.table = {\n  description: 'Table',\n  getColumns: function(data) {\n    if (!data || data.length === 0) {\n      return [];\n    }\n    if (data.length === 1) {\n      return data[0].columns;\n    } else {\n      return extractColumns(data);\n    }\n  },\n  transform: function(data, panel, model) {\n    if (!data || data.length === 0) {\n      return;\n    }\n\n    if (data[0] === undefined || data[0].type === undefined || data[0].type !== 'table') {\n      throw new Error('Query result is not in table format, try using another transform.');\n    }\n    _.forEach(data, (dataset, index)=> dataset.grouping = panel.groupings[index]);\n    model.columns = extractColumns(data).concat(panel.customColumns);\n    model.rows = extractRows(data, panel, model);\n  }\n};\n\ntransformers.json = {\n  description: 'JSON Data',\n  getColumns: function(data) {\n    if (!data || data.length === 0) {\n      return [];\n    }\n\n    var names = {};\n    for (var i = 0; i < data.length; i++) {\n      var series = data[i];\n      if (series.type !== 'docs') {\n        continue;\n      }\n\n      // only look at 100 docs\n      var maxDocs = Math.min(series.datapoints.length, 100);\n      for (var y = 0; y < maxDocs; y++) {\n        var doc = series.datapoints[y];\n        var flattened = flatten(doc, null);\n        for (var propName in flattened) {\n          names[propName] = true;\n        }\n      }\n    }\n\n    return _.map(names, function(value, key) {\n      return {text: key, value: key};\n    });\n  },\n  transform: function(data, panel, model) {\n    var i, y, z;\n    for (i = 0; i < panel.columns.length; i++) {\n      model.columns.push({text: panel.columns[i].text});\n    }\n\n    if (model.columns.length === 0) {\n      model.columns.push({text: 'JSON'});\n    }\n\n    for (i = 0; i < data.length; i++) {\n      var series = data[i];\n\n      for (y = 0; y < series.datapoints.length; y++) {\n        var dp = series.datapoints[y];\n        var values = [];\n\n        if (_.isObject(dp) && panel.columns.length > 0) {\n          var flattened = flatten(dp, null);\n          for (z = 0; z < panel.columns.length; z++) {\n            values.push(flattened[panel.columns[z].value]);\n          }\n        } else {\n          values.push(JSON.stringify(dp));\n        }\n\n        model.rows.push(values);\n      }\n    }\n  }\n};\n\nfunction extractColumns(data) {\n  return _.flatten(data.map((group)=> group.columns));\n}\n\nfunction extractRows(data, panel, model) {\n  var rows = [],\n      mapping = {},\n      columns = panel.columns.length ? panel.columns : model.columns,\n      customColumns = columns.filter((column)=> typeof column.script !== 'undefined'),\n      allHaveGrouping = _.every(data, (dataset)=> dataset.grouping);\n  \n  nameRowCells(data, model.columns);\n  \n  _.forEach(data, (dataset)=> {\n    _.forEach(dataset.namedRows, (row, rowIndex)=> {\n      var grouping = allHaveGrouping ? row[dataset.grouping] : rowIndex;\n      if (!mapping[grouping])\n        mapping[grouping] = {};\n      \n      _.assign(mapping[grouping], row);\n    });\n  });\n\n  _.forEach(_.values(mapping), (row)=> {\n    var outputRow = [];\n    if (panel.excludeUngrouped && Object.keys(row).length < columns.length - customColumns.length) return;\n    _.forEach(columns, (column)=> {\n      var value = row[column.text];\n      // if (column.script) value = column.script;\n      if (column.script) value = evalRowScript(row, column.script, model.columns);\n      if (typeof value === 'undefined') value = null;\n      outputRow.push(value);\n    });\n    rows.push(outputRow);\n  });\n\n  \n  return rows;\n}\n\nfunction nameRowCells(data, columns) {\n  _.forEach(data, (dataset, dataIndex)=> {\n    dataset.namedRows = _.map(dataset.rows.slice(), (row)=> {\n      var output = Object.create(null);\n      _.forEach(row, (cell, cellIndex)=> {\n        var column = _.find(columns, {dataIndex, cellIndex});\n        output[column.text] = cell;\n      });\n      return output;\n    });\n  });\n}\n\n\nvar placeholderRegex = /\\{(.+?)\\}/g;\nvar gEval = eval;\nvar evalScript = memoize((script)=> gEval(script));\n\nfunction evalRowScript(row, script, columns) {\n  script = script.replace(placeholderRegex, (e, name)=> {\n    var value = row[name] || 0;\n    return typeof value === 'string' ? '\"'+value+'\"' : value;\n  });\n  return evalScript(script);\n}\n\n\nfunction transformDataToTable(data, panel) {\n  var model = new TableModel();\n\n  if (!data || data.length === 0) {\n    return model;\n  }\n\n  var transformer = transformers[panel.transform];\n  if (!transformer) {\n    throw new Error('Transformer ' + panel.transformer + ' not found');\n  }\n\n  transformer.transform(data, panel, model);\n  return model;\n}\n\nexport {transformers, transformDataToTable};\n"]}
{"version":3,"sources":["../src/ctrl.js"],"names":["MetricsPanelCtrl","$","angular","kbn","FileExport","DataTable","transformDataToTable","transformers","DatatableRenderer","panelDefaults","targets","transform","rowsPerPage","showHeader","styles","type","pattern","dateFormat","unit","decimals","colors","colorMode","thresholds","columns","groupings","columnAliases","columnWidthHints","columnSortingRules","customColumns","scroll","scrollHeight","fontSize","sort","col","desc","datatableTheme","themeOptions","light","dark","rowNumbersEnabled","infoEnabled","searchEnabled","showCellBorders","showRowBorders","hoverEnabled","excludeUngrouped","baseGrouping","orderColumnEnabled","compactRowsEnabled","stripedRowsEnabled","lengthChangeEnabled","datatablePagingType","pagingTypes","text","value","themes","disabled","DatatablePanelCtrl","$scope","$injector","$http","$location","uiSegmentSrv","annotationsSrv","pageIndex","table","dataRaw","hide","addColumnSegment","newPlusButton","fontSizes","columnSortMethods","colorModes","columnTypes","unitFormats","getUnitFormats","dateFormats","getColumnNames","_","map","panel","fields","forEach","custom","index","findIndex","defaults","System","config","paths","getPanelPath","import","grafanaBootData","user","lightTheme","dataLoaded","http","events","on","onDataReceived","bind","onDataError","onInitEditMode","onInitPanelActions","actions","push","click","panels","settings","thisPanel","pluginId","thisPanelPath","baseUrl","optionsPath","addEditorTab","datatableOptionsPath","startsWith","substring","datasource","setTimeQueryStart","getAnnotations","dashboard","range","then","data","annotations","err","render","dataList","length","model","column","columnIndex","dataIndex","cellIndex","alias","emptyData","rows","tmpPanelHeight","ctrl","height","row","containerHeight","replace","actualHeight","parseInt","renderer","isTimezoneUtc","$sanitize","exportTableDataToCsv","render_values","scope","elem","attrs","formatters","_this","renderPanel","panelHeight","getPanelHeight","renderData","renderingCompleted","without","$q","when","getColumns","concat","segments","c","newSegment","find","plusButton","html","script","columnStyleDefaults","copy","style","columnAlias","name","columnWidthHint","width","hint","columnSortingRule","rule","subItem","ref","allHaveGrouping","every","dataset","grouping","templateUrl"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,sB,kBAAAA,gB;;AACFC,O;;AACAC,a;;AACAC,S;;AAEKC,gB;;AACLC,e;;AAmDLC,0B,iBAAAA,oB;AACAC,kB,iBAAAA,Y;;AAGOC,uB,aAAAA,iB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEHC,mB,GAAgB;AACpBC,iBAAS,CAAC,EAAD,CADW;AAEpBC,mBAAW,uBAFS;AAGpBC,qBAAa,CAHO;AAIpBC,oBAAY,IAJQ;AAKpBC,gBAAQ,CACN;AACEC,gBAAM,MADR;AAEEC,mBAAS,MAFX;AAGEC,sBAAY;AAHd,SADM,EAMN;AACEC,gBAAM,OADR;AAEEH,gBAAM,QAFR;AAGEI,oBAAU,CAHZ;AAIEC,kBAAQ,CAAC,wBAAD,EAA2B,0BAA3B,EAAuD,yBAAvD,CAJV;AAKEC,qBAAW,IALb;AAMEL,mBAAS,MANX;AAOEM,sBAAY;AAPd,SANM,CALY;AAqBpBC,iBAAS,EArBW;AAsBpBC,mBAAW,EAtBS;AAuBpBC,uBAAe,EAvBK;AAwBpBC,0BAAkB,EAxBE;AAyBpBC,4BAAoB,EAzBA;AA0BpBC,uBAAe,EA1BK;AA2BpBC,gBAAQ,KA3BY;AA4BpBC,sBAAc,SA5BM;AA6BpBC,kBAAU,MA7BU;AA8BpBC,cAAM;AACJC,eAAK,CADD;AAEJC,gBAAM;AAFF,SA9Bc;AAkCpBC,wBAAgB,aAlCI;AAmCpBC,sBAAc;AACZC,iBAAO,2BADK;AAEZC,gBAAO;AAFK,SAnCM;AAuCpBC,2BAAmB,KAvCC;AAwCpBC,qBAAa,IAxCO;AAyCpBC,uBAAe,IAzCK;AA0CpBC,yBAAiB,KA1CG;AA2CpBC,wBAAgB,IA3CI;AA4CpBC,sBAAc,IA5CM;AA6CpBC,0BAAkB,IA7CE;AA8CpBC,sBAAc,IA9CM;AA+CpBC,4BAAoB,IA/CA;AAgDpBC,4BAAoB,KAhDA;AAiDpBC,4BAAoB,IAjDA;AAkDpBC,6BAAqB,IAlDD;AAmDpBC,6BAAqB,gBAnDD;AAoDpBC,qBAAa,CACX;AACEC,gBAAM,0BADR;AAEEC,iBAAO;AAFT,SADW,EAKX;AACED,gBAAM,oCADR;AAEEC,iBAAO;AAFT,SALW,EASX;AACED,gBAAM,kDADR;AAEEC,iBAAO;AAFT,SATW,EAaX;AACED,gBAAM,gDADR;AAEEC,iBAAO;AAFT,SAbW,EAiBX;AACED,gBAAM,mEADR;AAEEC,iBAAO;AAFT,SAjBW,EAqBX;AACED,gBAAM,+CADR;AAEEC,iBAAO;AAFT,SArBW,CApDO;AA8EpBC,gBAAQ,CACN;AACED,iBAAO,aADT;AAEED,gBAAM,OAFR;AAGEG,oBAAU;AAHZ,SADM,EAMN;AACEF,iBAAO,iBADT;AAEED,gBAAM,WAFR;AAGEG,oBAAU;AAHZ,SANM,EAWN;AACEF,iBAAO,kBADT;AAEED,gBAAM,YAFR;AAGEG,oBAAU;AAHZ,SAXM,EAgBN;AACEF,iBAAO,mBADT;AAEED,gBAAM,aAFR;AAGEG,oBAAU;AAHZ,SAhBM;;AA9EY,O;;oCAuGTC,kB;;;AAEX,oCAAYC,MAAZ,EAAoBC,SAApB,EAA+BC,KAA/B,EAAsCC,SAAtC,EAAiDC,YAAjD,EAA+DC,cAA/D,EAA+E;AAAA;;AAAA,+IACvEL,MADuE,EAC/DC,SAD+D;;AAG7E,iBAAKK,SAAL,GAAiB,CAAjB;AACA,iBAAKC,KAAL,GAAa,IAAb;AACA,iBAAKC,OAAL,GAAe,EAAf;AACA,iBAAK3D,YAAL,GAAoBA,YAApB;AACA,iBAAKwD,cAAL,GAAsBA,cAAtB;AACA,iBAAKD,YAAL,GAAoBA,YAApB;AACA;AACA,iBAAKK,IAAL,GAAY,EAAZ;AACA,iBAAKC,gBAAL,GAAwBN,aAAaO,aAAb,EAAxB;AACA,iBAAKC,SAAL,GAAiB,CAAC,KAAD,EAAQ,KAAR,EAAe,MAAf,EAAuB,MAAvB,EAA+B,MAA/B,EAAuC,MAAvC,EAA+C,MAA/C,EAAuD,MAAvD,EAA+D,MAA/D,EAAuE,MAAvE,EAA+E,MAA/E,EAAuF,MAAvF,CAAjB;AACA,iBAAKC,iBAAL,GAAyB,CACvB,EAAClB,MAAK,YAAN,EAAoBC,OAAM,MAA1B,EADuB,EAEvB,EAACD,MAAK,WAAN,EAAmBC,OAAM,KAAzB,EAFuB,CAAzB;AAIA,iBAAKkB,UAAL,GAAkB,CAChB;AACEnB,kBAAM,UADR;AAEEC,mBAAO;AAFT,WADgB,EAKhB;AACED,kBAAM,MADR;AAEEC,mBAAO;AAFT,WALgB,EAShB;AACED,kBAAM,OADR;AAEEC,mBAAO;AAFT,WATgB,EAahB;AACED,kBAAM,KADR;AAEEC,mBAAO;AAFT,WAbgB,EAiBhB;AACED,kBAAM,YADR;AAEEC,mBAAO;AAFT,WAjBgB,CAAlB;AAsBA,iBAAKmB,WAAL,GAAmB,CACjB;AACEpB,kBAAM,QADR;AAEEC,mBAAO;AAFT,WADiB,EAKjB;AACED,kBAAM,QADR;AAEEC,mBAAO;AAFT,WALiB,EASjB;AACED,kBAAM,MADR;AAEEC,mBAAO;AAFT,WATiB,EAajB;AACED,kBAAM,QADR;AAEEC,mBAAO;AAFT,WAbiB,CAAnB;AAkBA,iBAAKoB,WAAL,GAAmBvE,IAAIwE,cAAJ,EAAnB;AACA,iBAAKC,WAAL,GAAmB,CACjB;AACEvB,kBAAM,qBADR;AAEEC,mBAAO;AAFT,WADiB,EAKjB;AACED,kBAAM,oBADR;AAEEC,mBAAO;AAFT,WALiB,EASjB;AACED,kBAAM,iBADR;AAEEC,mBAAO;AAFT,WATiB,CAAnB;AAcA;AACA,iBAAKuB,cAAL,GAAsB,YAAM;AAC1B,gBAAI,CAAC,OAAKZ,KAAV,EAAiB;AACf,qBAAO,EAAP;AACD;AACD,mBAAOa,EAAEC,GAAF,CAAM,OAAKd,KAAL,CAAW1C,OAAjB,EAA0B,UAASU,GAAT,EAAc;AAC7C,qBAAOA,IAAIoB,IAAX;AACD,aAFM,CAAP;AAGD,WAPD;AAQA,cAAI,OAAK2B,KAAL,CAAWlE,MAAX,KAAsB,KAAK,CAA/B,EAAkC;AAChC,mBAAKkE,KAAL,CAAWlE,MAAX,GAAoB,OAAKkE,KAAL,CAAWzD,OAA/B;AACA,mBAAKyD,KAAL,CAAWzD,OAAX,GAAqB,OAAKyD,KAAL,CAAWC,MAAhC;AACA,mBAAO,OAAKD,KAAL,CAAWzD,OAAlB;AACA,mBAAO,OAAKyD,KAAL,CAAWC,MAAlB;AACD;AACDH,YAAEI,OAAF,CAAU,OAAKF,KAAL,CAAWpD,aAArB,EAAoC,UAACuD,MAAD,EAAW;AAC7C,gBAAIC,QAAQN,EAAEO,SAAF,CAAY,OAAKL,KAAL,CAAWzD,OAAvB,EAAgC4D,MAAhC,CAAZ;AACA,gBAAIC,UAAU,CAAC,CAAf,EACE,OAAKJ,KAAL,CAAWzD,OAAX,CAAmB6D,KAAnB,IAA4BD,MAA5B;AACH,WAJD;AAKAL,YAAEQ,QAAF,CAAW,OAAKN,KAAhB,EAAuBvE,aAAvB;;AAEA8E,iBAAOC,MAAP,CAAc;AACVC,mBAAO;AACH,gCAAkB,OAAKC,YAAL,KAAsB,8CADrC;AAEH,mCAAsB,OAAKA,YAAL,KAAsB,oDAFzC;AAGH,qCAAwB,OAAKA,YAAL,KAAsB,qDAH3C;AAIH,mCAAsB,OAAKA,YAAL,KAAsB,qDAJzC;AAKH,wBAAW,OAAKA,YAAL,KAAsB,kCAL9B;AAMH,mCAAsB,OAAKA,YAAL,KAAsB;AANzC;AADG,WAAd;;AAWA;AACAH,iBAAOI,MAAP,CAAc,QAAd;AACAJ,iBAAOI,MAAP,CAAc,mBAAd;;AAEA;AACA;AACA,kBAAQ,OAAKX,KAAL,CAAW7C,cAAnB;AACE,iBAAK,aAAL;AACEoD,qBAAOI,MAAP,CAAc,OAAKD,YAAL,KAAuB,uDAArC;AACA,kBAAIE,gBAAgBC,IAAhB,CAAqBC,UAAzB,EAAqC;AACnCP,uBAAOI,MAAP,CAAc,OAAKD,YAAL,KAAsB,OAAKV,KAAL,CAAW5C,YAAX,CAAwBC,KAA9C,GAAsD,MAApE;AACD,eAFD,MAEO;AACLkD,uBAAOI,MAAP,CAAc,OAAKD,YAAL,KAAsB,OAAKV,KAAL,CAAW5C,YAAX,CAAwBE,IAA9C,GAAqD,MAAnE;AACD;AACD;AACF,iBAAK,iBAAL;AACEiD,qBAAOI,MAAP,CAAc,OAAKD,YAAL,KAAsB,uDAApC;AACAH,qBAAOI,MAAP,CAAc,OAAKD,YAAL,KAAsB,qDAApC;AACAH,qBAAOI,MAAP,CAAc,OAAKD,YAAL,KAAsB,0DAApC;AACA,kBAAI,CAACE,gBAAgBC,IAAhB,CAAqBC,UAA1B,EAAsC;AACpCP,uBAAOI,MAAP,CAAc,OAAKD,YAAL,KAAsB,uCAApC;AACD;AACD;AACF,iBAAK,kBAAL;AACEH,qBAAOI,MAAP,CAAc,OAAKD,YAAL,KAAsB,wDAApC;AACAH,qBAAOI,MAAP,CAAc,OAAKD,YAAL,KAAsB,kDAApC;AACAH,qBAAOI,MAAP,CAAc,OAAKD,YAAL,KAAsB,2DAApC;AACA;AACF,iBAAK,mBAAL;AACEH,qBAAOI,MAAP,CAAc,OAAKD,YAAL,KAAuB,wDAArC;AACAH,qBAAOI,MAAP,CAAc,OAAKD,YAAL,KAAuB,2DAArC;AACAH,qBAAOI,MAAP,CAAc,OAAKD,YAAL,KAAuB,+BAArC;AACA;AACJ;AACIH,qBAAOI,MAAP,CAAc,OAAKD,YAAL,KAAuB,uDAArC;AACA,kBAAIE,gBAAgBC,IAAhB,CAAqBC,UAAzB,EAAqC;AACnCP,uBAAOI,MAAP,CAAc,OAAKD,YAAL,KAAsB,OAAKV,KAAL,CAAW5C,YAAX,CAAwBC,KAA9C,GAAsD,MAApE;AACD,eAFD,MAEO;AACLkD,uBAAOI,MAAP,CAAc,OAAKD,YAAL,KAAsB,OAAKV,KAAL,CAAW5C,YAAX,CAAwBE,IAA9C,GAAqD,MAAnE;AACD;AACD;AAlCJ;AAoCA,iBAAKyD,UAAL,GAAkB,IAAlB;AACA,iBAAKC,IAAL,GAAYpC,KAAZ;AACA,iBAAKqC,MAAL,CAAYC,EAAZ,CAAe,eAAf,EAAgC,OAAKC,cAAL,CAAoBC,IAApB,QAAhC;AACA,iBAAKH,MAAL,CAAYC,EAAZ,CAAe,YAAf,EAA6B,OAAKG,WAAL,CAAiBD,IAAjB,QAA7B;AACA,iBAAKH,MAAL,CAAYC,EAAZ,CAAe,oBAAf,EAAqC,OAAKC,cAAL,CAAoBC,IAApB,QAArC;AACA,iBAAKH,MAAL,CAAYC,EAAZ,CAAe,gBAAf,EAAiC,OAAKI,cAAL,CAAoBF,IAApB,QAAjC;AACA,iBAAKH,MAAL,CAAYC,EAAZ,CAAe,oBAAf,EAAqC,OAAKK,kBAAL,CAAwBH,IAAxB,QAArC;AAzJ6E;AA0J9E;;;;6CAEkBI,O,EAAS;AACxBA,oBAAQC,IAAR,CAAa;AACXpD,oBAAM,YADK;AAEXqD,qBAAO;AAFI,aAAb;AAID;;;2CAGc;AACf;AACA,gBAAIC,SAASf,gBAAgBgB,QAAhB,CAAyBD,MAAtC;AACA,gBAAIE,YAAYF,OAAO,KAAKG,QAAZ,CAAhB;AACA,gBAAIC,gBAAgBF,UAAUG,OAAV,GAAoB,GAAxC;AACA;AACA,gBAAIC,cAAcF,gBAAgB,8BAAlC;AACA,iBAAKG,YAAL,CAAkB,SAAlB,EAA6BD,WAA7B,EAA0C,CAA1C;AACA,gBAAIE,uBAAuBJ,gBAAgB,kCAA3C;AACA,iBAAKG,YAAL,CAAkB,mBAAlB,EAAuCC,oBAAvC,EAA6D,CAA7D;AACD;;;yCAEc;AACb,gBAAIR,SAASf,gBAAgBgB,QAAhB,CAAyBD,MAAtC;AACA,gBAAIE,YAAYF,OAAO,KAAKG,QAAZ,CAAhB;AACA;AACA;AACA,gBAAID,UAAUG,OAAV,CAAkBI,UAAlB,CAA6B,QAA7B,CAAJ,EACE,OAAO,QAAQP,UAAUG,OAAlB,GAA4B,GAAnC,CADF,KAEK;AACH;AACA,kBAAIH,UAAUG,OAAV,CAAkBI,UAAlB,CAA6B,QAA7B,CAAJ,EAA4C;AAC1C,uBAAOP,UAAUG,OAAV,CAAkBK,SAAlB,CAA4B,CAA5B,IAAiC,GAAxC;AACD,eAFD,MAGK;AACH;AACA,uBAAOR,UAAUG,OAAV,GAAoB,GAA3B;AACD;AACF;AACF;;;uCAEYM,U,EAAY;AACvB,iBAAKtD,SAAL,GAAiB,CAAjB;AACA,gBAAI,KAAKgB,KAAL,CAAWrE,SAAX,KAAyB,aAA7B,EAA4C;AAC1C,mBAAK4G,iBAAL;AACA,qBAAO,KAAKxD,cAAL,CAAoByD,cAApB,CAAmC;AACtCC,2BAAW,KAAKA,SADsB;AAEtCzC,uBAAO,KAAKA,KAF0B;AAGtC0C,uBAAO,KAAKA;AAH0B,eAAnC,EAKJC,IALI,CAKC,uBAAe;AACnB,uBAAO;AACLC,wBAAMC;AADD,iBAAP;AAGD,eATI,CAAP;AAUD;AACD,wJAA0BP,UAA1B;AACD;;;sCAEWQ,G,EAAK;AACf,iBAAK5D,OAAL,GAAe,EAAf;AACA,iBAAK6D,MAAL;AACD;;;yCAEcC,Q,EAAU;AAAA;;AACvB,iBAAK9D,OAAL,GAAe8D,QAAf;AACA,iBAAKhE,SAAL,GAAiB,CAAjB;;AAEA;AACA,gBAAI,KAAKE,OAAL,IAAgB,KAAKA,OAAL,CAAa+D,MAAjC,EAAyC;AACvC,kBAAI,KAAK/D,OAAL,CAAa,CAAb,EAAgBnD,IAAhB,KAAyB,OAA7B,EAAsC;AACpC,qBAAKiE,KAAL,CAAWrE,SAAX,GAAuB,OAAvB;AACA,qBAAKuD,OAAL,CAAagB,OAAb,CAAqB,UAACgD,KAAD,EAAQ9C,KAAR,EAAiB;AACpC8C,wBAAM3G,OAAN,CAAc2D,OAAd,CAAsB,UAACiD,MAAD,EAASC,WAAT,EAAwB;AAC5CD,2BAAOE,SAAP,GAAmBjD,KAAnB;AACA+C,2BAAOG,SAAP,GAAmBF,WAAnB;AACA,wBAAI,OAAKlE,OAAL,CAAa+D,MAAb,IAAuBC,MAAMK,KAAjC,EAAwC;AACtCJ,6BAAO9E,IAAP,GAAiB6E,MAAMK,KAAvB,SAAgCJ,OAAO9E,IAAvC;AACD;AACF,mBAND;AAOD,iBARD;AAUD,eAZD,MAYO;AACL,oBAAI,KAAKa,OAAL,CAAa,CAAb,EAAgBnD,IAAhB,KAAyB,MAA7B,EAAqC;AACnC,uBAAKiE,KAAL,CAAWrE,SAAX,GAAuB,MAAvB;AACD,iBAFD,MAEO;AACL,sBAAI,KAAKqE,KAAL,CAAWrE,SAAX,KAAyB,OAAzB,IAAoC,KAAKqE,KAAL,CAAWrE,SAAX,KAAyB,MAAjE,EAAyE;AACvE,yBAAKqE,KAAL,CAAWrE,SAAX,GAAuB,oBAAvB;AACD;AACF;AACF;AAEF;AACD,iBAAKoH,MAAL;AACD;;;mCAEQ;AACP,iBAAK9D,KAAL,GAAa3D,qBAAqB,KAAK4D,OAA1B,EAAmC,KAAKc,KAAxC,CAAb;AACA,iBAAKf,KAAL,CAAWjC,IAAX,CAAgB,KAAKgD,KAAL,CAAWhD,IAA3B;AACA,iBAAKgD,KAAL,CAAWwD,SAAX,GAAuB,KAAKvE,KAAL,CAAWwE,IAAX,CAAgBR,MAAhB,KAA2B,CAA3B,IACA,KAAKhE,KAAL,CAAW1C,OAAX,CAAmB0G,MAAnB,KAA8B,CADrD;AAEA,kJAAoB,KAAKhE,KAAzB;AACD;;;2CAEgB;AACb;AACA,gBAAIyE,iBAAiB,KAAKhF,MAAL,CAAYiF,IAAZ,CAAiB3D,KAAjB,CAAuB4D,MAA5C;AACA;AACA,gBAAI,OAAOF,cAAP,KAA0B,WAA9B,EAA2C;AACzC;AACAA,+BAAiB,KAAKG,GAAL,IAAY,KAAKA,GAAL,CAASD,MAAtC;AACA;AACA,kBAAI,OAAOF,cAAP,KAA0B,WAA9B,EAA2C;AACzCA,iCAAiB,KAAKI,eAAL,IAAwB,KAAKF,MAA7B,IAAuC,GAAxD;AACD;AACF,aAPD,MAQK;AACH;AACAF,+BAAiBA,eAAeK,OAAf,CAAuB,IAAvB,EAA4B,EAA5B,CAAjB;AACD;AACD,gBAAIC,eAAeC,SAASP,cAAT,CAAnB;AACA;AACA,gBAAIM,eAAe,GAAnB,EAAwB;AACtBA,6BAAe,GAAf;AACD;AACD,mBAAOA,YAAP;AACH;;;sCAEW;AACV,gBAAIE,WAAW,IAAI1I,iBAAJ,CAAsB,KAAKwE,KAA3B,EAAkC,KAAKf,KAAvC,EAA8C,KAAKwD,SAAL,CAAe0B,aAAf,EAA9C,EAA8E,KAAKC,SAAnF,CAAf;AACAhJ,uBAAWiJ,oBAAX,CAAgCH,SAASI,aAAT,EAAhC;AACD;;;+BAEIC,K,EAAOC,I,EAAMC,K,EAAOd,I,EAAM;AAC7B,gBAAIf,IAAJ;AACA,gBAAI5C,QAAQ2D,KAAK3D,KAAjB;AACA,gBAAI0E,aAAa,EAAjB;AACA,gBAAIC,QAAQ,IAAZ;;AAEA;;;;AAIA,qBAASC,WAAT,GAAuB;AACrB,kBAAIV,WAAW,IAAI1I,iBAAJ,CAAsBwE,KAAtB,EAA6B2D,KAAK1E,KAAlC,EAAyC0E,KAAKlB,SAAL,CAAe0B,aAAf,EAAzC,EAAyER,KAAKS,SAA9E,CAAf;AACAF,uBAASnB,MAAT;AACA4B,oBAAM5D,UAAN,GAAmB,IAAnB;AACD;;AAED4C,iBAAK3D,KAAL,CAAW6E,WAAX,GAAyB,KAAKC,cAAL,EAAzB;AACAnB,iBAAK1C,MAAL,CAAYC,EAAZ,CAAe,QAAf,EAAyB,UAAS6D,UAAT,EAAqB;AAC5CnC,qBAAOmC,cAAcnC,IAArB;AACA,kBAAIA,IAAJ,EAAU;AACRgC;AACD;AACDjB,mBAAKqB,kBAAL;AACD,aAND;AAOD;;;mDAKwB;AACvB,gBAAI,KAAKhF,KAAL,CAAWtC,eAAf,EAAgC;AAC9B,mBAAKsC,KAAL,CAAWrC,cAAX,GAA4B,KAA5B;AACD;AACD,iBAAKoF,MAAL;AACD;;;yCAEc;AACb,iBAAKA,MAAL;AACD;;;2CAEgB;AACf,iBAAKA,MAAL;AACD;;;6CAEkB;AACjB,iBAAK/C,KAAL,CAAWzD,OAAX,GAAqB,EAArB;AACA,iBAAKwG,MAAL;AACD;;;uCACYI,M,EAAQ;AACnB,iBAAKnD,KAAL,CAAWzD,OAAX,GAAqBuD,EAAEmF,OAAF,CAAU,KAAKjF,KAAL,CAAWzD,OAArB,EAA8B4G,MAA9B,CAArB;AACA,iBAAKJ,MAAL;AACD;;;6CAEkB;AAAA;;AACjB,gBAAI,CAAC,KAAK7D,OAAV,EAAmB;AACjB,qBAAO,KAAKgG,EAAL,CAAQC,IAAR,CAAa,EAAb,CAAP;AACD;AACD,gBAAI5I,UAAU,KAAKhB,YAAL,CAAkB,KAAKyE,KAAL,CAAWrE,SAA7B,EAAwCyJ,UAAxC,CAAmD,KAAKlG,OAAxD,EAAiEmG,MAAjE,CAAwE,KAAKrF,KAAL,CAAWpD,aAAnF,CAAd;AACA,gBAAI0I,WAAWxF,EAAEC,GAAF,CAAMxD,OAAN,EAAe,UAACgJ,CAAD;AAAA,qBAAO,OAAKzG,YAAL,CAAkB0G,UAAlB,CAA6B;AAChElH,uBAAOiH,EAAElH;AADuD,eAA7B,CAAP;AAAA,aAAf,CAAf;AAGA,mBAAO,KAAK6G,EAAL,CAAQC,IAAR,CAAaG,QAAb,CAAP;AACD;;;sCAEW;AACV,gBAAI/I,UAAUhB,aAAa,KAAKyE,KAAL,CAAWrE,SAAxB,EAAmCyJ,UAAnC,CAA8C,KAAKlG,OAAnD,EAA4DmG,MAA5D,CAAmE,KAAKrF,KAAL,CAAWpD,aAA9E,CAAd;AACA,gBAAIuG,SAASrD,EAAE2F,IAAF,CAAOlJ,OAAP,EAAgB;AAC3B8B,oBAAM,KAAKe,gBAAL,CAAsBd;AADD,aAAhB,CAAb;;AAIA,gBAAI6E,MAAJ,EAAY;AACV,mBAAKnD,KAAL,CAAWzD,OAAX,CAAmBkF,IAAnB,CAAwB0B,MAAxB;AACA,mBAAKJ,MAAL;AACD;;AAED,gBAAI2C,aAAa,KAAK5G,YAAL,CAAkBO,aAAlB,EAAjB;AACA,iBAAKD,gBAAL,CAAsBuG,IAAtB,GAA6BD,WAAWC,IAAxC;AACA,iBAAKvG,gBAAL,CAAsBd,KAAtB,GAA8BoH,WAAWpH,KAAzC;AACD;;;4CAEiB;AAChB,iBAAK0B,KAAL,CAAWpD,aAAX,CAAyB6E,IAAzB,CAA8B,EAACpD,MAAK,EAAN,EAAUuH,QAAO,EAAjB,EAA9B;AACD;;;6CAEkBzC,M,EAAQ;AACzB,iBAAKnD,KAAL,CAAWpD,aAAX,GAA2BkD,EAAEmF,OAAF,CAAU,KAAKjF,KAAL,CAAWpD,aAArB,EAAoCuG,MAApC,CAA3B;AACD;;;2CAEgB;AACb,gBAAI0C,sBAAsB;AACxB3J,oBAAM,OADkB;AAExBH,oBAAM,QAFkB;AAGxBI,wBAAU,CAHc;AAIxBC,sBAAQ,CAAC,wBAAD,EAA2B,0BAA3B,EAAuD,yBAAvD,CAJgB;AAKxBC,yBAAW,IALa;AAMxBL,uBAAS,MANe;AAOxBC,0BAAY,qBAPY;AAQxBK,0BAAY;AARY,aAA1B;AAUA,iBAAK0D,KAAL,CAAWlE,MAAX,CAAkB2F,IAAlB,CAAuBvG,QAAQ4K,IAAR,CAAaD,mBAAb,CAAvB;AACH;;;4CAEiBE,K,EAAO;AACvB,iBAAK/F,KAAL,CAAWlE,MAAX,GAAoBgE,EAAEmF,OAAF,CAAU,KAAKjF,KAAL,CAAWlE,MAArB,EAA6BiK,KAA7B,CAApB;AACD;;;2CAEgB;AACf,gBAAIC,cAAc,EAACC,MAAK,EAAN,EAAU1C,OAAM,EAAhB,EAAlB;AACA,iBAAKvD,KAAL,CAAWvD,aAAX,CAAyBgF,IAAzB,CAA8BuE,WAA9B;AACD;;;4CAEiBzC,K,EAAO;AACvB,iBAAKvD,KAAL,CAAWvD,aAAX,GAA2BqD,EAAEmF,OAAF,CAAU,KAAKjF,KAAL,CAAWvD,aAArB,EAAoC8G,KAApC,CAA3B;AACD;;;+CAEoB;AACnB,gBAAI2C,kBAAkB,EAACD,MAAK,EAAN,EAAUE,OAAM,EAAhB,EAAtB;AACA,iBAAKnG,KAAL,CAAWtD,gBAAX,CAA4B+E,IAA5B,CAAiCyE,eAAjC;AACD;;;gDAEqBE,I,EAAM;AAC1B,iBAAKpG,KAAL,CAAWtD,gBAAX,GAA8BoD,EAAEmF,OAAF,CAAU,KAAKjF,KAAL,CAAWtD,gBAArB,EAAuC0J,IAAvC,CAA9B;AACD;;;iDAEsB;AACrB,gBAAIC,oBAAoB,EAACJ,MAAK,EAAN,EAAUjJ,MAAK,EAAf,EAAxB;AACA,iBAAKgD,KAAL,CAAWrD,kBAAX,CAA8B8E,IAA9B,CAAmC4E,iBAAnC;AACD;;;kDAEuBC,I,EAAM;AAC5B,iBAAKtG,KAAL,CAAWrD,kBAAX,GAAgCmD,EAAEmF,OAAF,CAAU,KAAKjF,KAAL,CAAWrD,kBAArB,EAAyC2J,IAAzC,CAAhC;AACD;;;wCACanD,M,EAAQoD,O,EAAS;AAC7BpD,mBAAOjH,IAAP,GAAcqK,QAAQjI,KAAtB;AACA,iBAAKyE,MAAL;AACD;;;2CACgB3C,K,EAAO;AACtB,gBAAIoG,MAAM,KAAKxG,KAAL,CAAWlE,MAAX,CAAkBsE,KAAlB,EAAyBhE,MAAnC;AACA,gBAAI0J,OAAOU,IAAI,CAAJ,CAAX;AACAA,gBAAI,CAAJ,IAASA,IAAI,CAAJ,CAAT;AACAA,gBAAI,CAAJ,IAASV,IAAT;AACA,iBAAK/C,MAAL;AACD;;;8CAEmB;AAClB,gBAAI0D,kBAAkB3G,EAAE4G,KAAF,CAAQ,KAAKxH,OAAb,EAAsB,UAACyH,OAAD;AAAA,qBAAYA,QAAQC,QAApB;AAAA,aAAtB,CAAtB;AACA,mBAAOH,mBAAmB,CAAC,KAAKzG,KAAL,CAAWnC,gBAAtC;AACD;;;;QApbqC7C,gB;;;;AAsbxCyD,yBAAmBoI,WAAnB,GAAiC,wBAAjC","file":"ctrl.js","sourcesContent":["import { MetricsPanelCtrl } from 'app/plugins/sdk';\nimport $ from 'jquery';\nimport angular from 'angular';\nimport kbn from 'app/core/utils/kbn';\n\nimport * as FileExport from 'app/core/utils/file_export';\nimport DataTable from './libs/datatables.net/js/jquery.dataTables.min.js';\n\n// this is needed for basic datatables.net theme\n//import './libs/datatables.net-dt/css/jquery.dataTables.min.css!';\n\n// See this for styling https://datatables.net/manual/styling/theme-creator\n\n/*\nDark Theme Basic uses these values\n\ntable section border: #242222 rgb(36,34,34)\nrow/cell border: #141414 rgb(20,20,20)\nrow background: #1F1D1D  rgb(31,29,29)\nrow selected color:  #242222 rgb(36,34,34)\ncontrol text: #1FB2E5 rgb(31,178,229)\ncontrol text: white  (dataTables_paginate)\npaging active button: #242222 rgb(36,34,34)\npaging button hover: #111111 rgb(17,17,17)\n\nwith these modifications:\n.dataTables_wrapper .dataTables_paginate .paginate_button {\n  color: white\n}\ntable.dataTable tfoot th {\n  color: #1FB2E5;\n  font-weight: bold; }\n\n\nLight Theme Basic uses these values\n\ntable section border: #ECECEC rgb(236,236,236)\nrow/cell border: #FFFFFF rgb(255,255,255)\nrow background: #FBFBFB  rgb(251,251,251)\nrow selected color:  #ECECEC rgb(236,236,236)\ncontrol text: black\npaging active button: #BEBEBE\npaging button hover: #C0C0C0\n\nwith these modifications:\n.dataTables_wrapper .dataTables_paginate .paginate_button.current, .dataTables_wrapper .dataTables_paginate .paginate_button.current:hover {\n  color: #1fb2e5 !important;\ntable.dataTable tfoot th {\n  color: #1FB2E5;\n  font-weight: bold; }\n*/\n\nimport './css/panel.css!';\n// themes attempt to modify the entire page, this \"contains\" the styling to the table only\nimport './css/datatables-wrapper.css!';\n\nimport {\n  transformDataToTable,\n  transformers\n} from './transformers';\n\nimport { DatatableRenderer } from './renderer';\n\nconst panelDefaults = {\n  targets: [{}],\n  transform: 'timeseries_to_columns',\n  rowsPerPage: 5,\n  showHeader: true,\n  styles: [\n    {\n      type: 'date',\n      pattern: 'Time',\n      dateFormat: 'YYYY-MM-DD HH:mm:ss',\n      },\n    {\n      unit: 'short',\n      type: 'number',\n      decimals: 2,\n      colors: [\"rgba(245, 54, 54, 0.9)\", \"rgba(237, 129, 40, 0.89)\", \"rgba(50, 172, 45, 0.97)\"],\n      colorMode: null,\n      pattern: '/.*/',\n      thresholds: [],\n      }\n    ],\n  columns: [],\n  groupings: [],\n  columnAliases: [],\n  columnWidthHints: [],\n  columnSortingRules: [],\n  customColumns: [],\n  scroll: false,\n  scrollHeight: 'default',\n  fontSize: '100%',\n  sort: {\n    col: 0,\n    desc: true\n  },\n  datatableTheme: 'basic_theme',\n  themeOptions: {\n    light: './css/datatable-light.css',\n    dark:  './css/datatable-dark.css'\n  },\n  rowNumbersEnabled: false,\n  infoEnabled: true,\n  searchEnabled: true,\n  showCellBorders: false,\n  showRowBorders: true,\n  hoverEnabled: true,\n  excludeUngrouped: true,\n  baseGrouping: null,\n  orderColumnEnabled: true,\n  compactRowsEnabled: false,\n  stripedRowsEnabled: true,\n  lengthChangeEnabled: true,\n  datatablePagingType: 'simple_numbers',\n  pagingTypes: [\n    {\n      text: 'Page number buttons only',\n      value: 'numbers',\n    },\n    {\n      text: \"'Previous' and 'Next' buttons only\",\n      value: 'simple'\n    },\n    {\n      text: \"'Previous' and 'Next' buttons, plus page numbers\",\n      value: 'simple_numbers'\n    },\n    {\n      text: \"'First', 'Previous', 'Next' and 'Last' buttons\",\n      value: 'full'\n    },\n    {\n      text: \"'First', 'Previous', 'Next' and 'Last' buttons, plus page numbers\",\n      value: 'full_numbers'\n    },\n    {\n      text: \"'First' and 'Last' buttons, plus page numbers\",\n      value: 'first_last_numbers'\n    }\n  ],\n  themes: [\n    {\n      value: 'basic_theme',\n      text: 'Basic',\n      disabled: false,\n    },\n    {\n      value: 'bootstrap_theme',\n      text: 'Bootstrap',\n      disabled: true,\n    },\n    {\n      value: 'foundation_theme',\n      text: 'Foundation',\n      disabled: true,\n    },\n    {\n      value: 'themeroller_theme',\n      text: 'ThemeRoller',\n      disabled: true,\n    }\n  ]\n\n};\n\nexport class DatatablePanelCtrl extends MetricsPanelCtrl {\n\n  constructor($scope, $injector, $http, $location, uiSegmentSrv, annotationsSrv) {\n    super($scope, $injector);\n\n    this.pageIndex = 0;\n    this.table = null;\n    this.dataRaw = [];\n    this.transformers = transformers;\n    this.annotationsSrv = annotationsSrv;\n    this.uiSegmentSrv = uiSegmentSrv;\n    // editor\n    this.hide = {};\n    this.addColumnSegment = uiSegmentSrv.newPlusButton();\n    this.fontSizes = ['80%', '90%', '100%', '110%', '120%', '130%', '150%', '160%', '180%', '200%', '220%', '250%'];\n    this.columnSortMethods = [\n      {text:'Descending', value:'desc'},\n      {text:'Ascending', value:'asc'}\n    ];\n    this.colorModes = [\n      {\n        text: 'Disabled',\n        value: null\n      },\n      {\n        text: 'Cell',\n        value: 'cell'\n      },\n      {\n        text: 'Value',\n        value: 'value'\n      },\n      {\n        text: 'Row',\n        value: 'row'\n      },\n      {\n        text: 'Row Column',\n        value: 'rowcolumn'\n      },\n    ];\n    this.columnTypes = [\n      {\n        text: 'Number',\n        value: 'number'\n      },\n      {\n        text: 'String',\n        value: 'string'\n      },\n      {\n        text: 'Date',\n        value: 'date'\n      },\n      {\n        text: 'Hidden',\n        value: 'hidden'\n      }\n    ];\n    this.unitFormats = kbn.getUnitFormats();\n    this.dateFormats = [\n      {\n        text: 'YYYY-MM-DD HH:mm:ss',\n        value: 'YYYY-MM-DD HH:mm:ss'\n      },\n      {\n        text: 'MM/DD/YY h:mm:ss a',\n        value: 'MM/DD/YY h:mm:ss a'\n      },\n      {\n        text: 'MMMM D, YYYY LT',\n        value: 'MMMM D, YYYY LT'\n      },\n    ];\n    // this is used from bs-typeahead and needs to be instance bound\n    this.getColumnNames = () => {\n      if (!this.table) {\n        return [];\n      }\n      return _.map(this.table.columns, function(col) {\n        return col.text;\n      });\n    };\n    if (this.panel.styles === void 0) {\n      this.panel.styles = this.panel.columns;\n      this.panel.columns = this.panel.fields;\n      delete this.panel.columns;\n      delete this.panel.fields;\n    }\n    _.forEach(this.panel.customColumns, (custom)=> {\n      var index = _.findIndex(this.panel.columns, custom);\n      if (index !== -1) \n        this.panel.columns[index] = custom;\n    });\n    _.defaults(this.panel, panelDefaults);\n\n    System.config({\n        paths: {\n            \"datatables.net\": this.getPanelPath() + \"libs/datatables.net/js/jquery.dataTables.min\",\n            \"datatables.net-bs\" : this.getPanelPath() + \"libs/datatables.net-bs/js/dataTables.bootstrap.min\",\n            \"datatables.net-jqui\" : this.getPanelPath() + \"libs/datatables.net-jqui/js/dataTables.jqueryui.min\",\n            \"datatables.net-zf\" : this.getPanelPath() + \"libs/datatables.net-zf/js/dataTables.foundation.min\",\n            \"markjs\" : this.getPanelPath() + \"libs/mark.js/dist/jquery.mark.js\",\n            \"datatables-markjs\" : this.getPanelPath() + \"libs/datatables.mark.js/dist/datatables.mark.js\",\n        }\n    });\n\n    // enable datatables marking/highlighting function when searching\n    System.import('markjs');\n    System.import('datatables-markjs');\n\n    // basic datatables theme\n    // alternative themes are disabled since they affect all datatable panels on same page currently\n    switch (this.panel.datatableTheme) {\n      case 'basic_theme':\n        System.import(this.getPanelPath() +  'libs/datatables.net-dt/css/jquery.dataTables.min.css!');\n        if (grafanaBootData.user.lightTheme) {\n          System.import(this.getPanelPath() + this.panel.themeOptions.light + '!css');\n        } else {\n          System.import(this.getPanelPath() + this.panel.themeOptions.dark + \"!css\");\n        }\n        break;\n      case 'bootstrap_theme':\n        System.import(this.getPanelPath() + 'libs/datatables.net-bs/js/dataTables.bootstrap.min.js');\n        System.import(this.getPanelPath() + 'libs/bootstrap/dist/css/prefixed-bootstrap.min.css!');\n        System.import(this.getPanelPath() + 'libs/datatables.net-bs/css/dataTables.bootstrap.min.css!');\n        if (!grafanaBootData.user.lightTheme) {\n          System.import(this.getPanelPath() + 'css/prefixed-bootstrap-slate.min.css!');\n        }\n        break;\n      case 'foundation_theme':\n        System.import(this.getPanelPath() + 'libs/datatables.net-zf/js/dataTables.foundation.min.js');\n        System.import(this.getPanelPath() + 'libs/foundation/css/prefixed-foundation.min.css!');\n        System.import(this.getPanelPath() + 'libs/datatables.net-zf/css/dataTables.foundation.min.css!');\n        break;\n      case 'themeroller_theme':\n        System.import(this.getPanelPath() +  'libs/datatables.net-jqui/js/dataTables.jqueryui.min.js');\n        System.import(this.getPanelPath() +  'libs/datatables.net-jqui/css/dataTables.jqueryui.min.css!');\n        System.import(this.getPanelPath() +  'css/jquery-ui-smoothness.css!');\n        break;\n    default:\n        System.import(this.getPanelPath() +  'libs/datatables.net-dt/css/jquery.dataTables.min.css!');\n        if (grafanaBootData.user.lightTheme) {\n          System.import(this.getPanelPath() + this.panel.themeOptions.light + '!css');\n        } else {\n          System.import(this.getPanelPath() + this.panel.themeOptions.dark + \"!css\");\n        }\n        break;\n    }\n    this.dataLoaded = true;\n    this.http = $http;\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('init-panel-actions', this.onInitPanelActions.bind(this));\n  }\n\n  onInitPanelActions(actions) {\n      actions.push({\n        text: 'Export CSV',\n        click: 'ctrl.exportCsv()'\n      });\n    }\n\n  // setup the editor\n  onInitEditMode() {\n    // determine the path to this plugin\n    var panels = grafanaBootData.settings.panels;\n    var thisPanel = panels[this.pluginId];\n    var thisPanelPath = thisPanel.baseUrl + '/';\n    // add the relative path to the partial\n    var optionsPath = thisPanelPath + 'partials/editor.options.html';\n    this.addEditorTab('Options', optionsPath, 2);\n    var datatableOptionsPath = thisPanelPath + 'partials/datatables.options.html';\n    this.addEditorTab('Datatable Options', datatableOptionsPath, 3);\n  }\n\n  getPanelPath() {\n    var panels = grafanaBootData.settings.panels;\n    var thisPanel = panels[this.pluginId];\n    //\n    // For Grafana < 4.6, the system loader preprends publib to the url, add a .. to go back one level\n    if (thisPanel.baseUrl.startsWith(\"publib\"))\n      return '../' + thisPanel.baseUrl + '/';\n    else {\n      // Grafana >= 4.6, webpack is used, need to fix the path for imports\n      if (thisPanel.baseUrl.startsWith(\"public\")) {\n        return thisPanel.baseUrl.substring(7) + '/';\n      }\n      else {\n        // this should never happen, but just in case, append a slash to the url\n        return thisPanel.baseUrl + '/';\n      }\n    }\n  }\n\n  issueQueries(datasource) {\n    this.pageIndex = 0;\n    if (this.panel.transform === 'annotations') {\n      this.setTimeQueryStart();\n      return this.annotationsSrv.getAnnotations({\n          dashboard: this.dashboard,\n          panel: this.panel,\n          range: this.range\n        })\n        .then(annotations => {\n          return {\n            data: annotations\n          };\n        });\n    }\n    return super.issueQueries(datasource);\n  }\n\n  onDataError(err) {\n    this.dataRaw = [];\n    this.render();\n  }\n\n  onDataReceived(dataList) {\n    this.dataRaw = dataList;\n    this.pageIndex = 0;\n\n    // automatically correct transform mode based on data\n    if (this.dataRaw && this.dataRaw.length) {\n      if (this.dataRaw[0].type === 'table') {\n        this.panel.transform = 'table';      \n        this.dataRaw.forEach((model, index)=> {\n          model.columns.forEach((column, columnIndex)=> {\n            column.dataIndex = index;\n            column.cellIndex = columnIndex;\n            if (this.dataRaw.length && model.alias) {\n              column.text = `${model.alias}.${column.text}`;\n            }\n          });\n        });\n      \n      } else {\n        if (this.dataRaw[0].type === 'docs') {\n          this.panel.transform = 'json';\n        } else {\n          if (this.panel.transform === 'table' || this.panel.transform === 'json') {\n            this.panel.transform = 'timeseries_to_rows';\n          }\n        }\n      }\n\n    }\n    this.render();\n  }\n\n  render() {\n    this.table = transformDataToTable(this.dataRaw, this.panel);\n    this.table.sort(this.panel.sort);\n    this.panel.emptyData = this.table.rows.length === 0 ||\n                           this.table.columns.length === 0;\n    return super.render(this.table);\n  }\n\n  getPanelHeight() {\n      // panel can have a fixed height via options\n      var tmpPanelHeight = this.$scope.ctrl.panel.height;\n      // if that is blank, try to get it from our row\n      if (typeof tmpPanelHeight === 'undefined') {\n        // get from the row instead\n        tmpPanelHeight = this.row && this.row.height;\n        // default to 250px if that was undefined also\n        if (typeof tmpPanelHeight === 'undefined') {\n          tmpPanelHeight = this.containerHeight || this.height || 250;\n        }\n      }\n      else {\n        // convert to numeric value\n        tmpPanelHeight = tmpPanelHeight.replace(\"px\",\"\");\n      }\n      var actualHeight = parseInt(tmpPanelHeight);\n      // grafana minimum height for a panel is 250px\n      if (actualHeight < 250) {\n        actualHeight = 250;\n      }\n      return actualHeight;\n  }\n\n  exportCsv() {\n    var renderer = new DatatableRenderer(this.panel, this.table, this.dashboard.isTimezoneUtc(), this.$sanitize);\n    FileExport.exportTableDataToCsv(renderer.render_values());\n  }\n\n  link(scope, elem, attrs, ctrl) {\n    var data;\n    var panel = ctrl.panel;\n    var formatters = [];\n    var _this = this;\n\n    /**\n     * [renderPanel description]\n     * @return {[type]} [description]\n     */\n    function renderPanel() {\n      var renderer = new DatatableRenderer(panel, ctrl.table, ctrl.dashboard.isTimezoneUtc(), ctrl.$sanitize);\n      renderer.render();\n      _this.dataLoaded = true;\n    }\n\n    ctrl.panel.panelHeight = this.getPanelHeight();\n    ctrl.events.on('render', function(renderData) {\n      data = renderData || data;\n      if (data) {\n        renderPanel();\n      }\n      ctrl.renderingCompleted();\n    });\n  }\n\n  // editor methods\n  //\n  // cell and row borders cannot both be set at the same time\n  showCellBordersChanged() {\n    if (this.panel.showCellBorders) {\n      this.panel.showRowBorders = false;\n    }\n    this.render();\n  }\n\n  themeChanged() {\n    this.render();\n  }\n\n  optionsChanged() {\n    this.render();\n  }\n\n  transformChanged() {\n    this.panel.columns = [];\n    this.render();\n  }\n  removeColumn(column) {\n    this.panel.columns = _.without(this.panel.columns, column);\n    this.render();\n  }\n\n  getColumnOptions() {\n    if (!this.dataRaw) {\n      return this.$q.when([]);\n    }\n    var columns = this.transformers[this.panel.transform].getColumns(this.dataRaw).concat(this.panel.customColumns);\n    var segments = _.map(columns, (c) => this.uiSegmentSrv.newSegment({\n      value: c.text\n    }));\n    return this.$q.when(segments);\n  }\n\n  addColumn() {\n    var columns = transformers[this.panel.transform].getColumns(this.dataRaw).concat(this.panel.customColumns);\n    var column = _.find(columns, {\n      text: this.addColumnSegment.value\n    });\n\n    if (column) {\n      this.panel.columns.push(column);\n      this.render();\n    }\n\n    var plusButton = this.uiSegmentSrv.newPlusButton();\n    this.addColumnSegment.html = plusButton.html;\n    this.addColumnSegment.value = plusButton.value;\n  }\n\n  addCustomColumn() {\n    this.panel.customColumns.push({text:'', script:''});\n  }\n\n  removeCustomColumn(column) {\n    this.panel.customColumns = _.without(this.panel.customColumns, column);\n  }\n\n  addColumnStyle() {\n      var columnStyleDefaults = {\n        unit: 'short',\n        type: 'number',\n        decimals: 2,\n        colors: [\"rgba(245, 54, 54, 0.9)\", \"rgba(237, 129, 40, 0.89)\", \"rgba(50, 172, 45, 0.97)\"],\n        colorMode: null,\n        pattern: '/.*/',\n        dateFormat: 'YYYY-MM-DD HH:mm:ss',\n        thresholds: [],\n      };\n      this.panel.styles.push(angular.copy(columnStyleDefaults));\n  }\n\n  removeColumnStyle(style) {\n    this.panel.styles = _.without(this.panel.styles, style);\n  }\n\n  addColumnAlias() {\n    var columnAlias = {name:'', alias:''};\n    this.panel.columnAliases.push(columnAlias);\n  }\n\n  removeColumnAlias(alias) {\n    this.panel.columnAliases = _.without(this.panel.columnAliases, alias);\n  }\n\n  addColumnWidthHint() {\n    var columnWidthHint = {name:'', width:''};\n    this.panel.columnWidthHints.push(columnWidthHint);\n  }\n\n  removeColumnWidthHint(hint) {\n    this.panel.columnWidthHints = _.without(this.panel.columnWidthHints, hint);\n  }\n\n  addColumnSortingRule() {\n    var columnSortingRule = {name:'', sort:''};\n    this.panel.columnSortingRules.push(columnSortingRule);\n  }\n\n  removeColumnSortingRule(rule) {\n    this.panel.columnSortingRules = _.without(this.panel.columnSortingRules, rule);\n  }\n  setUnitFormat(column, subItem) {\n    column.unit = subItem.value;\n    this.render();\n  }\n  invertColorOrder(index) {\n    var ref = this.panel.styles[index].colors;\n    var copy = ref[0];\n    ref[0] = ref[2];\n    ref[2] = copy;\n    this.render();\n  }\n\n  needsBaseGrouping() {\n    var allHaveGrouping = _.every(this.dataRaw, (dataset)=> dataset.grouping);\n    return allHaveGrouping && !this.panel.excludeUngrouped;\n  }\n}\nDatatablePanelCtrl.templateUrl = 'partials/template.html';\n"]}